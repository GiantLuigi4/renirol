package tfc.renirol.frontend.enums.format;

import tfc.renirol.frontend.enums.prims.NumericPrimitive;

import static org.lwjgl.vulkan.VK10.*;

public enum AttributeFormat {
    // 0
    R16_FLOAT(VK_FORMAT_R16_SFLOAT),
    RG16_FLOAT(VK_FORMAT_R16G16_SFLOAT),
    RGB16_FLOAT(VK_FORMAT_R16G16B16_SFLOAT),
    RGBA16_FLOAT(VK_FORMAT_R16G16B16A16_SFLOAT),

    // 1
    R32_FLOAT(VK_FORMAT_R32_SFLOAT),
    RG32_FLOAT(VK_FORMAT_R32G32_SFLOAT),
    RGB32_FLOAT(VK_FORMAT_R32G32B32_SFLOAT),
    RGBA32_FLOAT(VK_FORMAT_R32G32B32A32_SFLOAT),

    // 2
    R64_FLOAT(VK_FORMAT_R64_SFLOAT),
    RG64_FLOAT(VK_FORMAT_R64G64_SFLOAT),
    RGB64_FLOAT(VK_FORMAT_R64G64B64_SFLOAT),
    RGBA64_FLOAT(VK_FORMAT_R64G64B64A64_SFLOAT),

    // 3
    R8_UINT(VK_FORMAT_R8_UINT),
    RG8_UINT(VK_FORMAT_R8G8_UINT),
    RGB8_UINT(VK_FORMAT_R8G8B8_UINT),
    RGBA8_UINT(VK_FORMAT_R8G8B8A8_UINT),

    // 4
    R16_UINT(VK_FORMAT_R16_UINT),
    RG16_UINT(VK_FORMAT_R16G16_UINT),
    RGB16_UINT(VK_FORMAT_R16G16B16_UINT),
    RGBA16_UINT(VK_FORMAT_R16G16B16A16_UINT),

    // 5
    R32_UINT(VK_FORMAT_R32_UINT),
    RG32_UINT(VK_FORMAT_R32G32_UINT),
    RGB32_UINT(VK_FORMAT_R32G32B32_UINT),
    RGBA32_UINT(VK_FORMAT_R32G32B32A32_UINT),

    // 6
    R64_UINT(VK_FORMAT_R64_UINT),
    RG64_UINT(VK_FORMAT_R64G64_UINT),
    RGB64_UINT(VK_FORMAT_R64G64B64_UINT),
    RGBA64_UINT(VK_FORMAT_R64G64B64A64_UINT),

    // 7
    R8_INT(VK_FORMAT_R8_SINT),
    RG8_INT(VK_FORMAT_R8G8_SINT),
    RGB8_INT(VK_FORMAT_R8G8B8_SINT),
    RGBA8_INT(VK_FORMAT_R8G8B8A8_SINT),

    // 8
    R16_INT(VK_FORMAT_R16_SINT),
    RG16_INT(VK_FORMAT_R16G16_SINT),
    RGB16_INT(VK_FORMAT_R16G16B16_SINT),
    RGBA16_INT(VK_FORMAT_R16G16B16A16_SINT),

    // 9
    R32_INT(VK_FORMAT_R32_SINT),
    RG32_INT(VK_FORMAT_R32G32_SINT),
    RGB32_INT(VK_FORMAT_R32G32B32_SINT),
    RGBA32_INT(VK_FORMAT_R32G32B32A32_SINT),

    // 10
    R64_INT(VK_FORMAT_R64_SINT),
    RG64_INT(VK_FORMAT_R64G64_SINT),
    RGB64_INT(VK_FORMAT_R64G64B64_SINT),
    RGBA64_INT(VK_FORMAT_R64G64B64A64_SINT),

    // single component ints
    UINT8(VK_FORMAT_R8_UINT),
    SINT8(VK_FORMAT_R8_SINT),
    UINT16(VK_FORMAT_R16_UINT),
    SINT16(VK_FORMAT_R16_SINT),
    ;

    private static final AttributeFormat[] FORMATS = values();

    public static AttributeFormat format(int componentCount, NumericPrimitive type) {
        int offset = switch (type) {
            case BYTE -> 7;
            case SHORT -> 8;
            case INT -> 9;
            case LONG -> 10;

            case FLOAT -> 1;
            case DOUBLE -> 2;

            default -> throw new RuntimeException("HUH?");
        } * 4;
        return FORMATS[offset + componentCount];
    }

    public final int id;

    AttributeFormat(int id) {
        this.id = id;
    }
}
